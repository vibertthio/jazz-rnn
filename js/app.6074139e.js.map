{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/jazz-rnn.js","webpack:///./src/palette.js","webpack:///./src/melody-line.js","webpack:///./src/index.js","webpack:///./src/utils.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","NeuralDAW","_classCallCheck","this","constants","server","tone","scores","sounds","parts","initConstants","initServerConnection","initSounds","Instruments","CHRD","MLDY","BASS","DRUM","ToneInstruments","DrumInstruments","AllInstruments","ServerURL","APIS","META","ALL","V_META","V_CHRD","V_ALL","_this","getStaticMeta","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","url","response","wrap","_context","prev","next","fetch","method","headers","accept","content-type","sent","json","abrupt","stop","arguments","getStaticIntegration","_ref2","_callee2","id","_args2","_context2","undefined","body","JSON","stringify","ChordIdx","postVarianceMeta","_ref3","_callee3","_context3","postVarianceChordProgression","_ref4","_callee4","_args4","_context4","postVarianceIntegration","_ref5","_callee5","temp","density","_args5","_context5","Temperature","NoteDensity","_this2","Tone","ac","context","dataToNotes","beatResolution","octave","map","end","pitch","start","velocity","duration","time","note","Frequency","toNote","vel","initParts","_ref6","_callee6","bassNotes","bassPart","melodyNotes","melodyPart","chordsNotes","chordsPart","_args6","_context6","console","log","concat","ProgressionsData","Bass","Part","values","bassSound","play","gain","loop","loopEnd","Melody","melodySound","Chord","chordsSound","initVarianceParts","_ref7","_callee7","dense","_args7","_context7","Data","Notes","BeatResolutions","initVarianceProgression","_ref8","_callee8","data2","data3","_args8","_context8","datas","loadSoundFonts","_ref9","_callee9","sendReverbGain","sendReverb","melodyEQ","melodyGain","chordsEQ","chordsGain","bassEQ","bassGain","changeMasterVolume","_context9","Gain","Freeverb","EQ3","Soundfont","instrument","soundfont","destination","adsr","chain","Master","v","volume","dB","Math","stopAll","startAll","changeScores","palette","MelodyLine","melody_line_classCallCheck","melody","loading","currentPosition","canvas","document","getElementById","hoveringNotes","hoveringSounds","waiting","psize","size","width","height","canvasWidth","canvasHeight","borderRadius","ctx","getContext","beat","save","clearRect","translate","drawAnchorPoints","drawProgress","step","thickness","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","done","noteLength","fillStyle","colors","fillRect","restore","err","return","w","h","unit","xSteps","ySteps","scale","sin","Date","now","beginPath","arc","abs","PI","fill","strokeStyle","moveTo","lineTo","stroke","jr","JazzRNN","chordRenderer","melodyRenderer","bassRenderer","playing","dataId","temperature","numChordProgression","single","progressionCount","firstChild","textContent","setBpm","bpm","Transport","updateMelodies","_data$Data","Drums","updateMelody","setup","src_asyncToGenerator","meta","MetaData","NumChordProgression","draw","progress","pFloor","floor","updateProgress","requestAnimationFrame","StartAudioContext","playBtn","onclick","random","onchange","e","target","roomSize","_x","_x2","_x3","_x4"],"mappings":"aACA,SAAAA,EAAAC,GAQA,IAPA,IAMAC,EAAAC,EANAC,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GAIAM,EAAA,EAAAC,EAAA,GACQD,EAAAH,EAAAK,OAAoBF,IAC5BJ,EAAAC,EAAAG,GACAG,EAAAP,IACAK,EAAAG,KAAAD,EAAAP,GAAA,IAEAO,EAAAP,GAAA,EAEA,IAAAD,KAAAG,EACAO,OAAAC,UAAAC,eAAAC,KAAAV,EAAAH,KACAc,EAAAd,GAAAG,EAAAH,IAKA,IAFAe,KAAAhB,GAEAO,EAAAC,QACAD,EAAAU,OAAAV,GAOA,OAHAW,EAAAR,KAAAS,MAAAD,EAAAb,GAAA,IAGAe,IAEA,SAAAA,IAEA,IADA,IAAAC,EACAf,EAAA,EAAiBA,EAAAY,EAAAV,OAA4BF,IAAA,CAG7C,IAFA,IAAAgB,EAAAJ,EAAAZ,GACAiB,GAAA,EACAC,EAAA,EAAkBA,EAAAF,EAAAd,OAA2BgB,IAAA,CAC7C,IAAAC,EAAAH,EAAAE,GACA,IAAAf,EAAAgB,KAAAF,GAAA,GAEAA,IACAL,EAAAQ,OAAApB,IAAA,GACAe,EAAAM,IAAAC,EAAAN,EAAA,KAGA,OAAAD,EAIA,IAAAQ,EAAA,GAKApB,EAAA,CACAqB,EAAA,GAGAZ,EAAA,GAGA,SAAAS,EAAA1B,GAGA,GAAA4B,EAAA5B,GACA,OAAA4B,EAAA5B,GAAA8B,QAGA,IAAAC,EAAAH,EAAA5B,GAAA,CACAK,EAAAL,EACAgC,GAAA,EACAF,QAAA,IAUA,OANAhB,EAAAd,GAAAa,KAAAkB,EAAAD,QAAAC,IAAAD,QAAAJ,GAGAK,EAAAC,GAAA,EAGAD,EAAAD,QAKAJ,EAAAO,EAAAnB,EAGAY,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAL,EAAAM,EAAAC,GACAX,EAAAY,EAAAR,EAAAM,IACA1B,OAAA6B,eAAAT,EAAAM,EAAA,CAA0CI,YAAA,EAAAC,IAAAJ,KAK1CX,EAAAgB,EAAA,SAAAZ,GACA,oBAAAa,eAAAC,aACAlC,OAAA6B,eAAAT,EAAAa,OAAAC,YAAA,CAAwDC,MAAA,WAExDnC,OAAA6B,eAAAT,EAAA,cAAiDe,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAvC,OAAAwC,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAvC,OAAA6B,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAS,EAAAc,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAtB,GACA,IAAAM,EAAAN,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAL,EAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAgB,EAAAC,GAAsD,OAAA7C,OAAAC,UAAAC,eAAAC,KAAAyC,EAAAC,IAGtD7B,EAAA8B,EAAA,GAEA,IAAAC,EAAAC,OAAA,aAAAA,OAAA,iBACAC,EAAAF,EAAAhD,KAAA2C,KAAAK,GACAA,EAAAhD,KAAAX,EACA2D,IAAAG,QACA,QAAAvD,EAAA,EAAgBA,EAAAoD,EAAAlD,OAAuBF,IAAAP,EAAA2D,EAAApD,IACvC,IAAAU,EAAA4C,EAIA1C,EAAAR,KAAA,SAEAU,8mBCjJqB0C,aACnB,SAAAA,iGAAcC,CAAAC,KAAAF,GACZE,KAAKC,UAAY,GACjBD,KAAKE,OAAS,GACdF,KAAKG,KAAO,GACZH,KAAKI,OAAS,GACdJ,KAAKK,OAAS,GACdL,KAAKM,MAAQ,GAEbN,KAAKO,gBACLP,KAAKQ,uBACLR,KAAKS,4EAIL,IAWMC,EAAc,CAClBC,KAAM,EACNC,KAAM,EACNC,KAAM,EACNC,KAAM,GAGFC,EAAkB,CACtBL,EAAYC,KACZD,EAAYE,KACZF,EAAYG,MAERG,EAAkB,CACtBN,EAAYI,MAGRG,EAAiB,CACrBP,EAAYC,KACZD,EAAYE,KACZF,EAAYG,KACZH,EAAYI,MAGdd,KAAKC,UAAY,CACfiB,UAnCgB,gEAoChBC,KAlCW,CACXC,KAAM,gBACNT,KAAM,4BACNU,IAAK,uBACLC,OAAQ,mBACRC,OAAQ,+BACRC,MAAO,2BA6BPd,cACAK,kBACAC,kBACAC,iEAImB,IAAAQ,EAAAzB,KAEf0B,EAAa,eAAAC,EAAAC,EAAAC,mBAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAjG,EAAA,OAAA6F,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdL,EAAMP,EAAKxB,UAAUiB,UAAYO,EAAKxB,UAAUkB,KAAKC,KADvCe,EAAAE,KAAA,EAEGC,MAAMN,EAAK,CAChCO,OAAQ,MACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBANA,cAEdT,EAFcE,EAAAQ,KAAAR,EAAAE,KAAA,EASDJ,EAASW,OATR,cASd5G,EATcmG,EAAAQ,KAAAR,EAAAU,OAAA,SAUb7G,GAVa,wBAAAmG,EAAAW,SAAAf,MAAH,yBAAAJ,EAAAxE,MAAA6C,KAAA+C,YAAA,GAYbC,EAAoB,eAAAC,EAAArB,EAAAC,mBAAAC,KAAG,SAAAoB,IAAA,IAAAC,EAAAnB,EAAAC,EAAAjG,EAAAoH,EAAAL,UAAA,OAAAlB,mBAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAOc,EAAPC,EAAA5G,OAAA,QAAA8G,IAAAF,EAAA,GAAAA,EAAA,GAAY,EACjCpB,EAAMP,EAAKxB,UAAUiB,UAAYO,EAAKxB,UAAUkB,KAAKE,IADhCgC,EAAAhB,KAAA,EAEJC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBa,KAAMC,KAAKC,UAAU,CACnBC,SAAUP,MATa,cAErBlB,EAFqBoB,EAAAV,KAAAU,EAAAhB,KAAA,EAYRJ,EAASW,OAZD,cAYrB5G,EAZqBqH,EAAAV,KAAAU,EAAAR,OAAA,SAapB7G,GAboB,wBAAAqH,EAAAP,SAAAI,MAAH,yBAAAD,EAAA9F,MAAA6C,KAAA+C,YAAA,GAgBpBY,EAAgB,eAAAC,EAAAhC,EAAAC,mBAAAC,KAAG,SAAA+B,IAAA,IAAA7B,EAAAC,EAAAjG,EAAA,OAAA6F,mBAAAK,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cACjBL,EAAMP,EAAKxB,UAAUiB,UAAYO,EAAKxB,UAAUkB,KAAKG,OADpCwC,EAAAzB,KAAA,EAEAC,MAAMN,EAAK,CAChCO,OAAQ,MACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,sBANG,cAEjBT,EAFiB6B,EAAAnB,KAAAmB,EAAAzB,KAAA,EASJJ,EAASW,OATL,cASjB5G,EATiB8H,EAAAnB,KAAAmB,EAAAjB,OAAA,SAUhB7G,GAVgB,wBAAA8H,EAAAhB,SAAAe,MAAH,yBAAAD,EAAAzG,MAAA6C,KAAA+C,YAAA,GAahBgB,EAA4B,eAAAC,EAAApC,EAAAC,mBAAAC,KAAG,SAAAmC,IAAA,IAAAd,EAAAnB,EAAAC,EAAAjG,EAAAkI,EAAAnB,UAAA,OAAAlB,mBAAAK,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAOc,EAAPe,EAAA1H,OAAA,QAAA8G,IAAAY,EAAA,GAAAA,EAAA,GAAY,EACzClC,EAAMP,EAAKxB,UAAUiB,UAAYO,EAAKxB,UAAUkB,KAAKI,OADxB4C,EAAA9B,KAAA,EAEZC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBa,KAAMC,KAAKC,UAAU,CACnBC,SAAUP,MATqB,cAE7BlB,EAF6BkC,EAAAxB,KAAAwB,EAAA9B,KAAA,EAYhBJ,EAASW,OAZO,cAY7B5G,EAZ6BmI,EAAAxB,KAAAwB,EAAAtB,OAAA,SAa5B7G,GAb4B,wBAAAmI,EAAArB,SAAAmB,MAAH,yBAAAD,EAAA7G,MAAA6C,KAAA+C,YAAA,GAgB5BqB,EAAuB,eAAAC,EAAAzC,EAAAC,mBAAAC,KAAG,SAAAwC,IAAA,IAAAnB,EAAAoB,EAAAC,EAAAxC,EAAAC,EAAAjG,EAAAyI,EAAA1B,UAAA,OAAAlB,mBAAAK,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,cAAOc,EAAPsB,EAAAjI,OAAA,QAAA8G,IAAAmB,EAAA,GAAAA,EAAA,GAAY,EAAGF,EAAfE,EAAAjI,OAAA,QAAA8G,IAAAmB,EAAA,GAAAA,EAAA,GAAsB,EAAGD,EAAzBC,EAAAjI,OAAA,QAAA8G,IAAAmB,EAAA,GAAAA,EAAA,GAAmC,EAC3DzC,EAAMP,EAAKxB,UAAUiB,UAAYO,EAAKxB,UAAUkB,KAAKK,MAD7BkD,EAAArC,KAAA,EAEPC,MAAMN,EAAK,CAChCO,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBa,KAAMC,KAAKC,UAAU,CACnBC,SAAUP,EACVwB,YAAaJ,EACbK,YAAaJ,MAXa,cAExBvC,EAFwByC,EAAA/B,KAAA+B,EAAArC,KAAA,EAcXJ,EAASW,OAdE,cAcxB5G,EAdwB0I,EAAA/B,KAAA+B,EAAA7B,OAAA,SAevB7G,GAfuB,yBAAA0I,EAAA5B,SAAAwB,MAAH,yBAAAD,EAAAlH,MAAA6C,KAAA+C,YAAA,GAkB7B/C,KAAKE,OAAS,CACZwB,gBACAsB,uBACAW,mBACAI,+BACAK,gEAKS,IAAAS,EAAA7E,KAEXA,KAAKG,KAAO2E,IACZ,IAAMC,EAAKD,IAAKE,QAEVC,EAAc,SAACjJ,GAAsD,IAAhDkJ,EAAgDnC,UAAAvG,OAAA,QAAA8G,IAAAP,UAAA,GAAAA,UAAA,GAA/B,IAAKoC,EAA0BpC,UAAAvG,OAAA,QAAA8G,IAAAP,UAAA,GAAAA,UAAA,GAAjB,EAAG9F,EAAc8F,UAAAvG,OAAA,QAAA8G,IAAAP,UAAA,GAAAA,UAAA,GAAN,EAEnE,OAAO/G,EAAKoJ,IAAI,SAAA9F,GAAK,IACX+F,EAAgC/F,EAAhC+F,IAAKC,EAA2BhG,EAA3BgG,MAAOC,EAAoBjG,EAApBiG,MAAOC,EAAalG,EAAbkG,SAErBC,EAA6B,GAAYP,GAA7BG,EAAME,GAGxB,MAAO,CACLG,MALYH,EAAyB,EAAjBL,EAAqB,EAAIjI,IAAW,GAAYiI,GAMpES,KAJWb,IAAKc,UAAUN,EAAiB,GAATH,EAAa,QAAQU,SAKvDJ,WACAK,IALUN,EAAW,QAUrBO,EAAS,eAAAC,EAAApE,EAAAC,mBAAAC,KAAG,SAAAmE,IAAA,IAAA9C,EAAAnH,EAAAkK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,UAAA,OAAAlB,mBAAAK,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAOc,EAAPqD,EAAAhK,OAAA,QAAA8G,IAAAkD,EAAA,GAAAA,EAAA,GAAY,EAAZC,EAAApE,KAAA,EAEGwC,EAAK3E,OAAO8C,qBAAqBG,GAFpC,OAEVnH,EAFUyK,EAAA9D,KAGhB+D,QAAQC,IAAR,SAAAC,OAAqBzD,EAArB,eAEM+C,EAAYjB,EAAYjJ,EAAK6K,iBAAiBC,KAAM,KAAM,IAC1DX,EAAW,IAAIY,OAAK,SAACrB,EAAMsB,GAAW,IAClCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAO4G,UAAUC,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACnDS,IACMkB,MAAO,EAChBjB,EAASkB,QAAU,GAEbjB,EAAcnB,EAAYjJ,EAAK6K,iBAAiBS,OAAQ,MACxDjB,EAAa,IAAIU,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOkH,YAAYL,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDW,IACQgB,MAAO,EAClBf,EAAWgB,QAAU,GAEff,EAAcrB,EAAYjJ,EAAK6K,iBAAiBW,MAAO,MACvDjB,EAAa,IAAIQ,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOoH,YAAYP,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDa,IACQc,MAAO,EAClBb,EAAWc,QAAU,GAErBxC,EAAKvE,MAAQ,CACXtE,OACAmK,WACAI,aACAF,cAjCc,yBAAAI,EAAA3D,SAAAmD,MAAH,yBAAAD,EAAA7I,MAAA6C,KAAA+C,YAAA,GAqCT2E,EAAiB,eAAAC,EAAA/F,EAAAC,mBAAAC,KAAG,SAAA8F,IAAA,IAAAzE,EAAAoB,EAAAsD,EAAA7L,EAAAkK,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAuB,EAAA/E,UAAA,OAAAlB,mBAAAK,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,cAAOc,EAAP2E,EAAAtL,OAAA,QAAA8G,IAAAwE,EAAA,GAAAA,EAAA,GAAY,EAAGvD,EAAfuD,EAAAtL,OAAA,QAAA8G,IAAAwE,EAAA,GAAAA,EAAA,GAAsB,EAAGD,EAAzBC,EAAAtL,OAAA,QAAA8G,IAAAwE,EAAA,GAAAA,EAAA,GAAiC,EACzDpB,QAAQC,IAAR,6BAAAC,OAAyCzD,EAAzC,aAAAyD,OAAuDiB,EAAvD,YAAAjB,OAAuErC,EAAvE,OADwBwD,EAAA1F,KAAA,EAELwC,EAAK3E,OAAOkE,wBAAwBjB,EAAIoB,EAAMsD,GAFzC,OAElB7L,EAFkB+L,EAAApF,KAIlBuD,EAAYjB,EAChBjJ,EAAKgM,KAAKlB,KAAKmB,MACfjM,EAAKgM,KAAKlB,KAAKoB,iBACd,IAEG/B,EAAW,IAAIY,OAAK,SAACrB,EAAMsB,GAAW,IAClCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAO4G,UAAUC,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACnDS,IACMkB,MAAO,EAChBjB,EAASkB,QAAU,GAEbjB,EAAcnB,EAClBjJ,EAAKgM,KAAKV,OAAOW,MACjBjM,EAAKgM,KAAKV,OAAOY,kBAEb7B,EAAa,IAAIU,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOkH,YAAYL,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDW,IACQgB,MAAO,EAClBf,EAAWgB,QAAU,GAEff,EAAcrB,EAClBjJ,EAAKgM,KAAKR,MAAMS,MAChBjM,EAAKgM,KAAKR,MAAMU,kBAEZ3B,EAAa,IAAIQ,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOoH,YAAYP,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDa,IACQc,MAAO,EAClBb,EAAWc,QAAU,GAErBxC,EAAKvE,MAAQ,CACXtE,OACAmK,WACAI,aACAF,cA1CsB,yBAAA0B,EAAAjF,SAAA8E,MAAH,yBAAAD,EAAAxK,MAAA6C,KAAA+C,YAAA,GA8CjBoF,EAAuB,eAAAC,EAAAxG,EAAAC,mBAAAC,KAAG,SAAAuG,IAAA,IAAAlF,EAAAoB,EAAAsD,EAAA7L,EAAAsM,EAAAC,EAAArC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAiC,EAAAzF,UAAA,OAAAlB,mBAAAK,KAAA,SAAAuG,GAAA,cAAAA,EAAArG,KAAAqG,EAAApG,MAAA,cAAOc,EAAPqF,EAAAhM,OAAA,QAAA8G,IAAAkF,EAAA,GAAAA,EAAA,GAAY,EAAGjE,EAAfiE,EAAAhM,OAAA,QAAA8G,IAAAkF,EAAA,GAAAA,EAAA,GAAsB,EAAGX,EAAzBW,EAAAhM,OAAA,QAAA8G,IAAAkF,EAAA,GAAAA,EAAA,GAAiC,EAAjCA,EAAAhM,OAAA,QAAA8G,IAAAkF,EAAA,GAAAA,EAAA,GAAwD,EAAxDC,EAAApG,KAAA,EAIXwC,EAAK3E,OAAOkE,wBAAwBjB,EAAIoB,EAAMsD,GAJnC,cAIxB7L,EAJwByM,EAAA9F,KAK9B+D,QAAQC,IAAR,wCAAAC,OAAoDzD,EAApD,aAAAyD,OAAkEiB,EAAlE,YAAAjB,OAAkFrC,EAAlF,OAL8BkE,EAAApG,KAAA,GAMVwC,EAAK3E,OAAOkE,wBAAwBjB,EAAIoB,EAAMsD,EAAQ,KAN5C,eAMxBS,EANwBG,EAAA9F,KAO9B+D,QAAQC,IAAR,wCAAAC,OAAoDzD,EAApD,aAAAyD,OAAkEiB,EAAQ,IAA1E,YAAAjB,OAAyFrC,EAAzF,OAP8BkE,EAAApG,KAAA,GAQVwC,EAAK3E,OAAOkE,wBAAwBjB,EAAIoB,EAAMsD,EAAQ,KAR5C,QAQxBU,EARwBE,EAAA9F,KAS9B+D,QAAQC,IAAR,wCAAAC,OAAoDzD,EAApD,aAAAyD,OAAkEiB,EAAQ,IAA1E,YAAAjB,OAAyFrC,EAAzF,OAEM2B,EAAYjB,EAAYjJ,EAAKgM,KAAKlB,KAAKmB,MAAOjM,EAAKgM,KAAKlB,KAAKoB,iBAAkB,GAClFtB,OAAO3B,EAAYqD,EAAMN,KAAKlB,KAAKmB,MAAOjM,EAAKgM,KAAKlB,KAAKoB,iBAAkB,EAAG,IAC9EtB,OAAO3B,EAAYsD,EAAMP,KAAKlB,KAAKmB,MAAOjM,EAAKgM,KAAKlB,KAAKoB,iBAAkB,EAAG,KAC3E/B,EAAW,IAAIY,OAAK,SAACrB,EAAMsB,GAAW,IAClCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAO4G,UAAUC,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACnDS,IACMkB,MAAO,EAChBjB,EAASkB,QAAU,GAEbjB,EAAcnB,EAAYjJ,EAAKgM,KAAKV,OAAOW,MAAOjM,EAAKgM,KAAKV,OAAOY,iBACtEtB,OAAO3B,EAAYqD,EAAMN,KAAKV,OAAOW,MAAOjM,EAAKgM,KAAKV,OAAOY,gBAAiB,EAAG,IACjFtB,OAAO3B,EAAYsD,EAAMP,KAAKV,OAAOW,MAAOjM,EAAKgM,KAAKV,OAAOY,gBAAiB,EAAG,KAC9E7B,EAAa,IAAIU,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOkH,YAAYL,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDW,IACQgB,MAAO,EAClBf,EAAWgB,QAAU,GAEff,EAAcrB,EAAYjJ,EAAKgM,KAAKR,MAAMS,MAAOjM,EAAKgM,KAAKR,MAAMU,iBACpEtB,OAAO3B,EAAYqD,EAAMN,KAAKR,MAAMS,MAAOjM,EAAKgM,KAAKR,MAAMU,gBAAiB,EAAG,IAC/EtB,OAAO3B,EAAYsD,EAAMP,KAAKR,MAAMS,MAAOjM,EAAKgM,KAAKR,MAAMU,gBAAiB,EAAG,KAC5E3B,EAAa,IAAIQ,OAAK,SAACrB,EAAMsB,GAAW,IACpCrB,EAAwBqB,EAAxBrB,KAAMF,EAAkBuB,EAAlBvB,SAAUK,EAAQkB,EAARlB,IACxBjB,EAAKxE,OAAOoH,YAAYP,KAAKvB,EAAMD,EAAM,CAAEyB,KAAMrB,EAAKL,cACrDa,IACQc,MAAO,EAClBb,EAAWc,QAAU,GAErBxC,EAAKvE,MAAQ,CACXtE,OACA0M,MAAO,CACL1M,EACAsM,EACAC,GAEFpC,WACAI,aACAF,cAlD4B,yBAAAoC,EAAA3F,SAAAuF,MAAH,yBAAAD,EAAAjL,MAAA6C,KAAA+C,YAAA,GAsEvB4F,EAAc,eAAAC,EAAAhH,EAAAC,mBAAAC,KAAG,SAAA+G,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA1B,EAAA2B,EAAAC,EAAA1B,EAAA2B,EAAAC,EAAApC,EAAAqC,EAAA,OAAAzH,mBAAAK,KAAA,SAAAqH,GAAA,cAAAA,EAAAnH,KAAAmH,EAAAlH,MAAA,cAEfyG,EAAiB,IAAIhE,IAAK0E,KAAK,IAC/BT,EAAa,IAAIjE,IAAK2E,SAAS,GAAK,KAEpCT,EAAW,IAAIlE,IAAK4E,IAAI,GAAI,EAAG,GAC/BT,EAAa,IAAInE,IAAK0E,KAAK,IANZD,EAAAlH,KAAA,EAOKsH,IAAUC,WAClC7E,EACA,uBACA,CACE8E,UAAW,aACXC,YAAad,EACbe,KAAM,CAAE,IAAM,GAAK,GAAK,OAbP,cAOfxC,EAPegC,EAAA5G,KAiBrBqG,EAASgB,MAAMf,EAAYF,EAAYD,EAAgBmB,UACvDjB,EAASgB,MAAMf,EAAYgB,UAC3BvD,QAAQC,IAAI,yBAENuC,EAAW,IAAIpE,IAAK4E,KAAK,IAAK,GAAI,GAClCP,EAAa,IAAIrE,IAAK0E,KAAK,GAtBZD,EAAAlH,KAAA,GAuBKsH,IAAUC,WAClC7E,EACA,mBACA,CACE8E,UAAW,aACXC,YAAaZ,IA5BI,eAuBfzB,EAvBe8B,EAAA5G,KAgCrBuG,EAASc,MAAMb,EAAYJ,EAAYD,EAAgBmB,UACvDf,EAASc,MAAMb,EAAYc,UAC3BvD,QAAQC,IAAI,yBAENyC,EAAS,IAAItE,IAAK4E,IAAI,EAAG,EAAG,GAC5BL,EAAW,IAAIvE,IAAK0E,KAAK,IArCVD,EAAAlH,KAAA,GAsCGsH,IAAUC,WAChC7E,EACA,gBACA,CACE8E,UAAW,aACXC,YAAaV,IA3CI,QAsCfnC,EAtCesC,EAAA5G,KA+CrByG,EAAOY,MAAMX,EAAUY,UACvBvD,QAAQC,IAAI,uBAEN2C,EAAqB,SAAAY,GACzBrF,EAAKxE,OAAO8J,OAAa,IAAJD,EACrB,IAAME,EAAK,GAAKC,KAAK1D,IAAQ,IAAJuD,GACzBD,SAAOE,OAAOrL,MAAQsL,GAGxBvF,EAAKxE,OAAS,CACZ8J,OAAQ,EACRpB,aACAD,iBACAQ,qBACA/B,cACA0B,aACAxB,cACA0B,aACAlC,YACAoC,YAlEmB,yBAAAE,EAAAzG,SAAA+F,MAAH,yBAAAD,EAAAzL,MAAA6C,KAAA+C,YAAA,GA6EpB/C,KAAKI,OAAS,CACZ2F,YACA2B,oBACAS,0BACAQ,iBACA2B,QAlGc,WACdzF,EAAKvE,MAAMiG,WAAWzD,OACtB+B,EAAKvE,MAAM+F,WAAWvD,OACtB+B,EAAKvE,MAAM6F,SAASrD,OAEpB+B,EAAKxE,OAAOoH,YAAY3E,OACxB+B,EAAKxE,OAAOkH,YAAYzE,OACxB+B,EAAKxE,OAAO4G,UAAUnE,QA4FtByH,SAzFe,WACf1F,EAAKvE,MAAM6F,SAASZ,QACpBV,EAAKvE,MAAM+F,WAAWd,QACtBV,EAAKvE,MAAMiG,WAAWhB,SAuFtBiF,aAXmB,WAAYzH,UAAAvG,OAAA,QAAA8G,IAAAP,UAAA,IAAAA,UAAA,0CC7YtB0H,mDAAA,CACb,sBACA,wBACA,yBACA,yBACA,sBACA,sBACA,uMCLmBC,aACnB,SAAAA,EAAYvH,gGAAIwH,CAAA3K,KAAA0K,GACd1K,KAAKmD,GAAKA,EACVnD,KAAK4K,OAAS,GACd5K,KAAK6K,SAAU,EACf7K,KAAK8K,gBAAkB,EACvB9K,KAAK+K,OAASC,SAASC,eAAejL,KAAKmD,IAE3CnD,KAAKkL,eAAgB,EACrBlL,KAAKmL,gBAAiB,EACtBnL,KAAKoL,SAAU,8DAGJlN,GACX8B,KAAK6K,SAAU,EACf7K,KAAK4K,OAAS1M,iCAIJ,IAAPuB,EAAOsD,UAAAvG,OAAA,QAAA8G,IAAAP,UAAA,GAAAA,UAAA,GAAH,EAEP/C,KAAK+K,OAASC,SAASC,eAAejL,KAAKmD,IAC3C,IAAMkI,EAAQC,IAAKtL,KAAK+K,QACxB/K,KAAK+K,OAAOQ,MAAmB,EAAXF,EAAM,GAC1BrL,KAAK+K,OAAOS,OAAoB,EAAXH,EAAM,GAE3B,IACMI,EAAczL,KAAK+K,OAAOQ,MAC1BG,EAAe1L,KAAK+K,OAAOS,OAC3BD,EAAQE,EAAcE,GACtBH,EAASE,EAAeC,GACxBC,EAAM5L,KAAK+K,OAAOc,WAAW,MAE7BC,EADmB,KACZrM,EAWb,GARAmM,EAAIG,OAGJH,EAAII,UAAU,EAAG,EAAGP,EAAaC,GACjCE,EAAIK,UAdiB,KAerBjM,KAAKkM,iBAAiBN,EAAKL,EAAOC,EAAQD,EAAQ,IAClDvL,KAAKmM,aAAaP,EAAIL,EAAOC,EAAQ/L,IAEhCO,KAAK6K,UAAY7K,KAAKkL,cAAe,CACxCU,EAAIG,OAEJ,IAAMK,EAAOb,EAfU,KAgBjBc,EAAYb,EAAS,GAJac,GAAA,EAAAC,GAAA,EAAAC,OAAAlJ,EAAA,IAMxC,QAAAmJ,EAAAC,EAAiB1M,KAAK4K,OAAtBhM,OAAA+N,cAAAL,GAAAG,EAAAC,EAAArK,QAAAuK,MAAAN,GAAA,EAA8B,KAArB3G,EAAqB8G,EAAA3N,MACpByG,EAAgCI,EAAhCJ,MAAOF,EAAyBM,EAAzBN,IAAKC,EAAoBK,EAApBL,MAEduH,GAFkClH,EAAbH,SAERH,EAAME,GAEzBqG,EAAIG,OAEJH,EAAIK,UAAU1G,EAAQ6G,GAAO,IAAM9G,EAAQ,KAAO+G,GAC7CrM,KAAKoL,QAGRQ,EAAIkB,UAAYC,EAAO,GAFvBnB,EAAIkB,UAAYC,EAAO,GAIrBjB,GAAQvG,GAASuG,EAAOzG,GAE1BuG,EAAIkB,UAAYC,EAAO,GACvBnB,EAAIK,WAAWY,EAAaT,EAAO,IAAM,KACzCR,EAAIoB,SAAS,EAAG,EAAGH,EAAaT,EAAO,IAAiB,EAAZC,IAE5CT,EAAIoB,SAAS,EAAG,EAAGH,EAAaT,EAAO,GAAKC,GAG9CT,EAAIqB,WA5BkC,MAAAC,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,MAAAC,GA+BxCZ,EAAIqB,UAENrB,EAAIqB,mDAGWrB,EAAKwB,EAAGC,EAAGC,GAC1B1B,EAAIG,OAIJ,IAHA,IACMwB,EAASH,EAAIE,EACbE,EAASH,EAAIC,EACVhR,EAAI,EAAGA,GAAKiR,EAAQjR,GAAK,EAChC,IAAK,IAAIkB,EAAI,EAAGA,GAAKgQ,EAAS,EAAGhQ,GAAK,EAAG,CAKvC,GAJAoO,EAAIG,OACJH,EAAIkB,UAAYC,EAAO,GACvBnB,EAAIK,UAAU3P,EAAIgR,EAAM9P,EAAI8P,GAExBtN,KAAKkL,cAAe,CACtBU,EAAIkB,UAAYC,EAAO,GACvB,IAAMU,EAA2D,EAAnDpD,KAAKqD,IAAiB,KAAbC,KAAKC,MAAoB,GAAJtR,EAAc,GAAJkB,GAEtDoO,EAAIiC,YACJjC,EAAIkC,IAAI,EAAG,EAAGzD,KAAK0D,IAdZ,EAcuBN,EAAQ,IAAM,EAAa,EAAVpD,KAAK2D,IACpDpC,EAAIqC,YAIJrC,EAAIoB,SAAS,EAAG,EAnBT,KAqBTpB,EAAIqB,UAGRrB,EAAIqB,+CAGOrB,EAAKwB,EAAGC,EAAG5N,GACtBmM,EAAIG,OACJH,EAAIsC,YAAcnB,EAAO,GACzBnB,EAAIkB,UAAYC,EAAO,GAEvBnB,EAAIK,UAAUmB,EAAI3N,EAAG,GACrBmM,EAAIiC,YACJjC,EAAIkC,IAAI,EAAG,EAAO,IAAJT,EAAU,EAAa,EAAVhD,KAAK2D,IAChCpC,EAAIqC,OAEJrC,EAAIiC,YACJjC,EAAIuC,OAAO,EAAG,GACdvC,EAAIwC,OAAO,EAAGf,GACdzB,EAAIyC,SAEJzC,EAAIK,UAAU,EAAGoB,GACjBzB,EAAIiC,YACJjC,EAAIkC,IAAI,EAAG,EAAO,IAAJT,EAAU,EAAa,EAAVhD,KAAK2D,IAChCpC,EAAIqC,OAEJrC,EAAIqB,yWC9HR,IAAMqB,EAAK,IAAIC,EACTC,EAAgB,IAAI9D,EAAW,YAC/B+D,EAAiB,IAAI/D,EAAW,YAChCgE,EAAe,IAAIhE,EAAW,YAC9BvK,EAAOmO,EAAGnO,KACVyL,EAAMzL,EAAK6E,QACb6F,GAAU,EACV8D,GAAU,EACVC,EAAS,EACTpK,EAAU,EACVqK,EAAc,EACdC,EAAsB,EACtBC,GAAS,EAETC,EAAmB,EAEjBzJ,EAAQ,WACIyF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,OACjCP,GAAU,EACVL,EAAGlO,OAAOmK,YAGNzH,EAAO,WACKkI,SAASC,eAAe,QAChCgE,WAAWC,YAAc,OACjCP,GAAU,EACVL,EAAGlO,OAAOkK,WAYN6E,EAAS,SAACC,GACdjP,EAAKkP,UAAUD,IAAItQ,MAAQsQ,GAGvBE,EAAiB,SAACtT,GAAS,IAAAuT,EACQvT,EAAKgM,KAApClB,EADuByI,EACvBzI,KAAMU,EADiB+H,EACjB/H,MAAcF,GADGiI,EACVC,MADUD,EACHjI,QAC5BkH,EAAciB,aAAajI,EAAMS,OACjCwG,EAAegB,aAAanI,EAAOW,OACnCyG,EAAae,aAAa3I,EAAKmB,QAG3ByH,EAAK,eAAA/N,EAAAgO,EAAA9N,mBAAAC,KAAG,SAAAC,IAAA,IAAA6N,EAAA,OAAA/N,mBAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEOiM,EAAGpO,OAAOyD,mBAFjB,cAENiM,EAFMzN,EAAAQ,KAGZ+D,QAAQC,IAAI,oBAEZmI,EAAsBc,EAAKC,SAASC,oBALxB3N,EAAAE,KAAA,EAQNiM,EAAGlO,OAAOuI,iBARJ,cAAAxG,EAAAE,KAAA,EASNiM,EAAGlO,OAAOsH,kBAAkBkH,GATtB,OAWZN,EAAGlO,OAAOmK,WACV7D,QAAQC,IAAI,sBAGZwI,EAAO,KACPhP,EAAK8J,OAAOE,OAAOrL,MAAQ,GAAKuL,KAAK1D,IAAI,IACzCxG,EAAKkP,UAAU9J,QAGCyF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,OACjCrE,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAE7BoE,EAAehB,EAAGhO,MAAMtE,MA3BZ,yBAAAmG,EAAAW,SAAAf,MAAH,yBAAAJ,EAAAxE,MAAA6C,KAAA+C,YAAA,GA2NLgN,EAAO,SAAPA,IACJ,IAAMtQ,EAtBe,WACrB,IAAIA,EAAI,EAER,GAAI6O,EAAGhO,MAAMiG,aAAesE,EAC1B,GAAIkE,EACFtP,EAAI6O,EAAGhO,MAAMiG,WAAWyJ,aACnB,CACLvQ,EAlPkB,EAkPd6O,EAAGhO,MAAMiG,WAAWyJ,SACxB,IAAMC,EAAS5F,KAAK6F,MAAMzQ,GACtBuP,GAAoBiB,IACtBvJ,QAAQC,IAAR,aAAAC,OAAyBqJ,EAAS,EAAlC,KAAArJ,OArPgB,IAsPhBoI,EAAmBiB,EACnBjF,SAASC,eAAe,QAAQgE,WAAWC,YAA3C,GAAAtI,OAA4DoI,EAAmB,EAA/E,MACAM,EAAehB,EAAGhO,MAAMoI,MAAMsG,KAEhCvP,GAAQwQ,EAGZ,OAAOxQ,EAIG0Q,GACV3B,EAAcuB,KAAKtQ,GACnBgP,EAAesB,KAAKtQ,GACpBiP,EAAaqB,KAAKtQ,GAClB2Q,sBAAsB,WAAQL,OAGhCM,IAAkBzE,EAAK,QAAS,WAE9B,IAxCAjE,EANA3B,EA1BA3B,EA1BAL,EAkGMsM,EAAUtF,SAASC,eAAe,QACxCvE,QAAQC,IAAI,yBACZD,QAAQC,IAAI,oBACZ2J,EAAQrB,WAAWC,YAAc,UChSjCxI,QAAQC,IAAI,eAAgB,sDAC5BD,QAAQC,IAAI,iBAAkB,sDAC9BD,QAAQC,IAAI,yBAA0B,sDDiStC+I,IA1MA1E,SAASC,eAAe,QAAQsF,QAAU,WACnC1F,IACC8D,EACF7L,IAEAyC,MAMNyF,SAASC,eAAe,UAAUsF,QAAlCZ,EAAA9N,mBAAAC,KAA4C,SAAAoB,IAAA,OAAArB,mBAAAK,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,UACrCwI,EADqC,CAAAxH,EAAAhB,KAAA,gBAExCS,IAEA+H,GAAU,EACVkE,GAAS,EACTP,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAEbF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,UAEjBlE,SAASC,eAAe,QAChCgE,WAAWC,YAAc,OAGjCN,EAASvE,KAAK6F,MAAM7F,KAAKmG,SAAW1B,GAjBIzL,EAAAhB,KAAA,GAkBlCiM,EAAGlO,OAAOsH,kBAAkBkH,EAAQC,EAAarK,GAlBf,QAoBxC8K,EAAehB,EAAGhO,MAAMtE,MAExB6O,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAE7B3F,IA3BwC,yBAAAlC,EAAAP,SAAAI,MAgC5C8H,SAASC,eAAe,QAAQsF,QAAhCZ,EAAA9N,mBAAAC,KAA0C,SAAA+B,IAAA,OAAAhC,mBAAAK,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,UACnCwI,EADmC,CAAA/G,EAAAzB,KAAA,aAElC0M,EAFkC,CAAAjL,EAAAzB,KAAA,gBAGhCsM,GACFL,EAAGlO,OAAOkK,UAEZyE,GAAS,EAETlE,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAEbF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,UAEjBlE,SAASC,eAAe,QAChCgE,WAAWC,YAAc,MAjBGpL,EAAAzB,KAAA,GAoB9BiM,EAAGlO,OAAO+H,wBAAwByG,EAAQC,EAAarK,GApBzB,QAsBpC8K,EAAehB,EAAGhO,MAAMtE,MAExB6O,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAE7B3F,IA7BoC,yBAAAzB,EAAAhB,SAAAe,MAmC1CmH,SAASC,eAAe,UAAUwF,SAAW,SAACC,GAC5CpC,EAAGjO,OAAOiJ,mBAAmBoH,EAAEC,OAAO7R,QAIxCkM,SAASC,eAAe,OAAOwF,SAAW,SAACC,GACzCvB,EAAOuB,EAAEC,OAAO7R,QAIlBkM,SAASC,eAAe,MAAMwF,SAAW,SAACC,GACxC,IAAMxG,EAAqB,IAAjBwG,EAAEC,OAAO7R,MACnBwP,EAAGjO,OAAOyI,eAAe3B,KAAKrI,MAAQoL,GAGxCc,SAASC,eAAe,MAAMwF,SAAW,SAACC,GACxC,IAAMxG,EAAqB,IAAjBwG,EAAEC,OAAO7R,MACnBwP,EAAGjO,OAAO0I,WAAW6H,SAAS9R,MAAQoL,GAGxCc,SAASC,eAAe,MAAMwF,UAA9BzM,EAAA2L,EAAA9N,mBAAAC,KAAyC,SAAAmC,EAAOyM,GAAP,OAAA7O,mBAAAK,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,UAClCwI,EADkC,CAAA1G,EAAA9B,KAAA,gBAErCmC,EAA2B,IAAjBkM,EAAEC,OAAO7R,MACnBgE,IAEA+H,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAEbF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,UAXI/K,EAAA9B,KAAA,GAa/BiM,EAAGlO,OAAOsH,kBAAkBkH,EAAQC,EAAarK,GAblB,QAerC8K,EAAehB,EAAGhO,MAAMtE,MAExB6O,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAE7B3F,IAtBqC,yBAAApB,EAAArB,SAAAmB,MAAzC,SAAA4M,GAAA,OAAA7M,EAAA7G,MAAA6C,KAAA+C,aA0BAiI,SAASC,eAAe,MAAMwF,UAA9BpM,EAAAsL,EAAA9N,mBAAAC,KAAyC,SAAAwC,EAAOoM,GAAP,OAAA7O,mBAAAK,KAAA,SAAAwC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,UAClCwI,EADkC,CAAAnG,EAAArC,KAAA,gBAErCwM,EAA+B,IAAjB6B,EAAEC,OAAO7R,MACvBgE,IAEA+H,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAEbF,SAASC,eAAe,QAChCgE,WAAWC,YAAc,UAXIxK,EAAArC,KAAA,GAa/BiM,EAAGlO,OAAOsH,kBAAkBkH,EAAQC,EAAarK,GAblB,QAerC8K,EAAehB,EAAGhO,MAAMtE,MAExB6O,GAAU,EACV2D,EAActD,eAAgB,EAC9BuD,EAAevD,eAAgB,EAC/BwD,EAAaxD,eAAgB,EAE7B3F,IAtBqC,yBAAAb,EAAA5B,SAAAwB,MAAzC,SAAAwM,GAAA,OAAAzM,EAAAlH,MAAA6C,KAAA+C,aA0BAiI,SAASC,eAAe,MAAMwF,UAA9BzK,EAAA2J,EAAA9N,mBAAAC,KAAyC,SAAAmE,EAAOyK,GAAP,IAAAxG,EAAA,OAAArI,mBAAAK,KAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,OAEjC6H,EAAqB,IAAjBwG,EAAEC,OAAO7R,MACnBwP,EAAGjO,OAAO4I,WAAW9B,KAAKrI,MAAQoL,EAHK,wBAAAzD,EAAA3D,SAAAmD,MAAzC,SAAA8K,GAAA,OAAA/K,EAAA7I,MAAA6C,KAAA+C,aAMAiI,SAASC,eAAe,MAAMwF,UAA9B9I,EAAAgI,EAAA9N,mBAAAC,KAAyC,SAAA8F,EAAO8I,GAAP,IAAAxG,EAAA,OAAArI,mBAAAK,KAAA,SAAA6F,GAAA,cAAAA,EAAA3F,KAAA2F,EAAA1F,MAAA,OAEjC6H,EAAqB,IAAjBwG,EAAEC,OAAO7R,MACnBwP,EAAGjO,OAAO8I,WAAWhC,KAAKrI,MAAQoL,EAHK,wBAAAnC,EAAAjF,SAAA8E,MAAzC,SAAAoJ,GAAA,OAAArJ,EAAAxK,MAAA6C,KAAA+C,aAgDAqN,sBAAsB,WAAQL","file":"js/app.6074139e.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([122,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import Tone, { Master, Part, AudioNode } from 'tone';\nimport fakeData from './fake-data';\nimport Soundfont from 'soundfont-player';\n\n\nexport default class NeuralDAW {\n  constructor() {\n    this.constants = {};\n    this.server = {};\n    this.tone = {};\n    this.scores = {};\n    this.sounds = {};\n    this.parts = {};\n\n    this.initConstants();\n    this.initServerConnection();\n    this.initSounds();\n  }\n\n  initConstants() {\n    const ServerURL = 'https://developer.ailabs.tw/ai-music-performancernn-demo/api/';\n\n    const APIS = {\n      META: 'getStaticMeta',\n      CHRD: 'getStaticChordProgression',\n      ALL: 'getStaticIntegration',\n      V_META: 'postVarianceMeta',\n      V_CHRD: 'postVarianceChordProgression',\n      V_ALL: 'postVarianceIntegration',\n    };\n\n    const Instruments = {\n      CHRD: 0,\n      MLDY: 1,\n      BASS: 2,\n      DRUM: 3,\n    };\n\n    const ToneInstruments = [\n      Instruments.CHRD,\n      Instruments.MLDY,\n      Instruments.BASS,\n    ];\n    const DrumInstruments = [\n      Instruments.DRUM,\n    ];\n\n    const AllInstruments = [\n      Instruments.CHRD,\n      Instruments.MLDY,\n      Instruments.BASS,\n      Instruments.DRUM,\n    ];\n\n    this.constants = {\n      ServerURL,\n      APIS,\n      Instruments,\n      ToneInstruments,\n      DrumInstruments,\n      AllInstruments,\n    };\n  }\n\n  initServerConnection() {\n\n    const getStaticMeta = async () => {\n      const url = this.constants.ServerURL + this.constants.APIS.META;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      return data;\n    };\n    const getStaticIntegration = async (id = 0) => {\n      const url = this.constants.ServerURL + this.constants.APIS.ALL;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          ChordIdx: id,\n        }),\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    const postVarianceMeta = async () => {\n      const url = this.constants.ServerURL + this.constants.APIS.V_META;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    const postVarianceChordProgression = async (id = 0) => {\n      const url = this.constants.ServerURL + this.constants.APIS.V_CHRD;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          ChordIdx: id,\n        }),\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    const postVarianceIntegration = async (id = 0, temp = 1, density = 1) => {\n      const url = this.constants.ServerURL + this.constants.APIS.V_ALL;\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          ChordIdx: id,\n          Temperature: temp,\n          NoteDensity: density,\n        }),\n      });\n      const data = await response.json();\n      return data;\n    };\n\n    this.server = {\n      getStaticMeta,\n      getStaticIntegration,\n      postVarianceMeta,\n      postVarianceChordProgression,\n      postVarianceIntegration,\n    };\n\n  }\n\n  initSounds() {\n\n    this.tone = Tone;\n    const ac = Tone.context;\n\n    const dataToNotes = (data, beatResolution = 220, octave = 0, shift = 0) => {\n      const bpm = 120;\n      return data.map(n => {\n        const { end, pitch, start, velocity } = n;\n        const time = (start + beatResolution * 4 * 8 * shift) * ((60 / bpm) / beatResolution);\n        const duration = (end - start) * ((60 / bpm) / beatResolution);\n        const note = Tone.Frequency(pitch + octave * 12, 'midi').toNote();\n        const vel = velocity / 128;\n        return {\n          time,\n          note,\n          duration,\n          vel,\n        };\n      });\n    };\n\n    const initParts = async (id = 0) => {\n      // const data = fakeData[id];\n      const data = await this.server.getStaticIntegration(id);\n      console.log(`[ id: ${id} ] loaded!`);\n      // console.log(data);\n      const bassNotes = dataToNotes(data.ProgressionsData.Bass, 220, -1);\n      const bassPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.bassSound.play(note, time, { gain: vel, duration });\n      }, bassNotes);\n      bassPart.loop = true;\n      bassPart.loopEnd = 16;\n\n      const melodyNotes = dataToNotes(data.ProgressionsData.Melody, 220);\n      const melodyPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.melodySound.play(note, time, { gain: vel, duration });\n      }, melodyNotes);\n      melodyPart.loop = true;\n      melodyPart.loopEnd = 16;\n\n      const chordsNotes = dataToNotes(data.ProgressionsData.Chord, 220);\n      const chordsPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.chordsSound.play(note, time, { gain: vel, duration });\n      }, chordsNotes);\n      chordsPart.loop = true;\n      chordsPart.loopEnd = 16;\n\n      this.parts = {\n        data,\n        bassPart,\n        chordsPart,\n        melodyPart,\n      };\n    };\n\n    const initVarianceParts = async (id = 0, temp = 1, dense = 1) => {\n      console.log(`Data loaded: single [ id: ${id}, dense: ${dense}, temp: ${temp} ]`);\n      const data = await this.server.postVarianceIntegration(id, temp, dense);\n      // console.log(data);\n      const bassNotes = dataToNotes(\n        data.Data.Bass.Notes,\n        data.Data.Bass.BeatResolutions,\n        -1\n      );\n      const bassPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.bassSound.play(note, time, { gain: vel, duration });\n      }, bassNotes);\n      bassPart.loop = true;\n      bassPart.loopEnd = 16;\n\n      const melodyNotes = dataToNotes(\n        data.Data.Melody.Notes,\n        data.Data.Melody.BeatResolutions,\n      );\n      const melodyPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.melodySound.play(note, time, { gain: vel, duration });\n      }, melodyNotes);\n      melodyPart.loop = true;\n      melodyPart.loopEnd = 16;\n\n      const chordsNotes = dataToNotes(\n        data.Data.Chord.Notes,\n        data.Data.Chord.BeatResolutions,\n      );\n      const chordsPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.chordsSound.play(note, time, { gain: vel, duration });\n      }, chordsNotes);\n      chordsPart.loop = true;\n      chordsPart.loopEnd = 16;\n\n      this.parts = {\n        data,\n        bassPart,\n        chordsPart,\n        melodyPart,\n      };\n    };\n\n    const initVarianceProgression = async (id = 0, temp = 1, dense = 1, progressionLength = 3) => {\n\n      // TODO: adjustable length\n\n      const data = await this.server.postVarianceIntegration(id, temp, dense);\n      console.log(`Data loaded: progression (1/3) [ id: ${id}, dense: ${dense}, temp: ${temp} ]`);\n      const data2 = await this.server.postVarianceIntegration(id, temp, dense + 0.75);\n      console.log(`Data loaded: progression (2/3) [ id: ${id}, dense: ${dense + 0.75}, temp: ${temp} ]`);\n      const data3 = await this.server.postVarianceIntegration(id, temp, dense - 0.25);\n      console.log(`Data loaded: progression (3/3) [ id: ${id}, dense: ${dense - 0.25}, temp: ${temp} ]`);\n      // console.log(data);\n      const bassNotes = dataToNotes(data.Data.Bass.Notes, data.Data.Bass.BeatResolutions, -1)\n        .concat(dataToNotes(data2.Data.Bass.Notes, data.Data.Bass.BeatResolutions, -1, 1))\n        .concat(dataToNotes(data3.Data.Bass.Notes, data.Data.Bass.BeatResolutions, -1, 2));\n      const bassPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.bassSound.play(note, time, { gain: vel, duration });\n      }, bassNotes);\n      bassPart.loop = true;\n      bassPart.loopEnd = 48;\n\n      const melodyNotes = dataToNotes(data.Data.Melody.Notes, data.Data.Melody.BeatResolutions)\n        .concat(dataToNotes(data2.Data.Melody.Notes, data.Data.Melody.BeatResolutions, 0, 1))\n        .concat(dataToNotes(data3.Data.Melody.Notes, data.Data.Melody.BeatResolutions, 0, 2));\n      const melodyPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.melodySound.play(note, time, { gain: vel, duration });\n      }, melodyNotes);\n      melodyPart.loop = true;\n      melodyPart.loopEnd = 48;\n\n      const chordsNotes = dataToNotes(data.Data.Chord.Notes, data.Data.Chord.BeatResolutions)\n        .concat(dataToNotes(data2.Data.Chord.Notes, data.Data.Chord.BeatResolutions, 0, 1))\n        .concat(dataToNotes(data3.Data.Chord.Notes, data.Data.Chord.BeatResolutions, 0, 2));\n      const chordsPart = new Part((time, values) => {\n        const { note, duration, vel } = values;\n        this.sounds.chordsSound.play(note, time, { gain: vel, duration });\n      }, chordsNotes);\n      chordsPart.loop = true;\n      chordsPart.loopEnd = 48;\n\n      this.parts = {\n        data,\n        datas: [\n          data,\n          data2,\n          data3,\n        ],\n        bassPart,\n        chordsPart,\n        melodyPart,\n      };\n    };\n\n    const stopAll = () => {\n      this.parts.chordsPart.stop();\n      this.parts.melodyPart.stop();\n      this.parts.bassPart.stop();\n\n      this.sounds.chordsSound.stop();\n      this.sounds.melodySound.stop();\n      this.sounds.bassSound.stop();\n    };\n\n    const startAll = () => {\n      this.parts.bassPart.start();\n      this.parts.melodyPart.start();\n      this.parts.chordsPart.start();\n    };\n\n    const loadSoundFonts = async () => {\n\n      const sendReverbGain = new Tone.Gain(0.3);\n      const sendReverb = new Tone.Freeverb(0.7, 1000); // Tone.JCReverb();\n\n      const melodyEQ = new Tone.EQ3(0, -5, 0);\n      const melodyGain = new Tone.Gain(0.6);\n      const melodySound = await Soundfont.instrument(\n        ac,\n        'acoustic_grand_piano',\n        {\n          soundfont: 'MusyngKite',\n          destination: melodyEQ,\n          adsr: [ 0.02, 0.3, 0.9, 1.5 ],\n        },\n      );\n\n      melodyEQ.chain(melodyGain, sendReverb, sendReverbGain, Master);\n      melodyEQ.chain(melodyGain, Master);\n      console.log('Melody sounds loaded!');\n\n      const chordsEQ = new Tone.EQ3(-10, -2, -5);\n      const chordsGain = new Tone.Gain(1.0);\n      const chordsSound = await Soundfont.instrument(\n        ac,\n        'electric_piano_1',\n        {\n          soundfont: 'MusyngKite',\n          destination: chordsEQ,\n        },\n      );\n\n      chordsEQ.chain(chordsGain, sendReverb, sendReverbGain, Master);\n      chordsEQ.chain(chordsGain, Master);\n      console.log('Chords sounds loaded!');\n\n      const bassEQ = new Tone.EQ3(0, 0, 0);\n      const bassGain = new Tone.Gain(0.4);\n      const bassSound = await Soundfont.instrument(\n        ac,\n        'acoustic_bass',\n        {\n          soundfont: 'MusyngKite',\n          destination: bassEQ,\n        },\n      );\n\n      bassEQ.chain(bassGain, Master);\n      console.log('Bass sounds loaded!');\n\n      const changeMasterVolume = v => {\n        this.sounds.volume = v * 0.01;\n        const dB = 20 * Math.log(v * 0.01);\n        Master.volume.value = dB;\n      };\n\n      this.sounds = {\n        volume: 1.0,\n        sendReverb,\n        sendReverbGain,\n        changeMasterVolume,\n        melodySound,\n        melodyGain,\n        chordsSound,\n        chordsGain,\n        bassSound,\n        bassGain,\n      };\n\n      // initParts();\n      // startAll();\n    };\n\n    const changeScores = (id = 0) => {\n      // todo\n    };\n\n    this.scores = {\n      initParts,\n      initVarianceParts,\n      initVarianceProgression,\n      loadSoundFonts,\n      stopAll,\n      startAll,\n      changeScores,\n    };\n  }\n\n}\n","// color palette\n\nexport default [\n  'rgba(53, 53, 53, 1)',\n  'rgba(60, 110, 113, 1)',\n  'rgba(255, 255, 255, 1)',\n  'rgba(217, 217, 217, 1)',\n  'rgba(40, 75, 99, 1)',\n  'rgba(80, 80, 80, 1)',\n  '#ff9e74',\n];\n\n\n\n\n","import colors from './palette';\nimport size from 'element-size';\n\n\nexport default class MelodyLine {\n  constructor(id) {\n    this.id = id;\n    this.melody = [];\n    this.loading = true;\n    this.currentPosition = 0;\n    this.canvas = document.getElementById(this.id);\n\n    this.hoveringNotes = true;\n    this.hoveringSounds = false;\n    this.waiting = false;\n  }\n\n  updateMelody(m) {\n    this.loading = false;\n    this.melody = m;\n    // console.log(m);\n  }\n\n  draw(p = 0) {\n    // resize\n    this.canvas = document.getElementById(this.id);\n    const psize = size(this.canvas);\n    this.canvas.width = psize[0] | 0;\n    this.canvas.height = psize[1] | 0;\n\n    const borderRadius = 5;\n    const canvasWidth = this.canvas.width;\n    const canvasHeight = this.canvas.height;\n    const width = canvasWidth - borderRadius * 2;\n    const height = canvasHeight - borderRadius * 2;\n    const ctx = this.canvas.getContext('2d');\n    const totalNotesLength = 220 * 4 * 8;\n    const beat = p * totalNotesLength;\n\n\n    ctx.save();\n\n    // background\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    ctx.translate(borderRadius, borderRadius);\n    this.drawAnchorPoints(ctx, width, height, width / 16);\n    this.drawProgress(ctx,width, height, p);\n\n    if (!this.loading && !this.hoveringNotes) {\n      ctx.save();\n\n      const step = width / totalNotesLength;\n      const thickness = height / 64;\n\n      for (let note of this.melody) {\n        const { start, end, pitch, velocity } = note;\n        // const { pitch, quantizedStartStep, quantizedEndStep } = note;\n        const noteLength = end - start;\n\n        ctx.save();\n\n        ctx.translate(start * step, (64 - (pitch - 28)) * thickness);\n        if (!this.waiting) {\n          ctx.fillStyle = colors[3];\n        } else {\n          ctx.fillStyle = colors[5];\n        }\n        if (beat >= start && beat < end) {\n          // ctx.fillStyle = colors[2];\n          ctx.fillStyle = colors[6];\n          ctx.translate(-noteLength * step * 0.1, -2.5);\n          ctx.fillRect(0, 0, noteLength * step * 1.1, thickness * 2);\n        } else {\n          ctx.fillRect(0, 0, noteLength * step * 0.8, thickness);\n        }\n\n        ctx.restore();\n      }\n\n      ctx.restore();\n    }\n    ctx.restore();\n  }\n\n  drawAnchorPoints(ctx, w, h, unit) {\n    ctx.save();\n    const size = 2;\n    const xSteps = w / unit;\n    const ySteps = h / unit;\n    for (let i = 0; i <= xSteps; i += 1) {\n      for (let j = 0; j <= ySteps + 1; j += 1) {\n        ctx.save();\n        ctx.fillStyle = colors[5];\n        ctx.translate(i * unit, j * unit);\n\n        if (this.hoveringNotes) {\n          ctx.fillStyle = colors[6];\n          const scale = Math.sin(Date.now() * 0.002 - i * 0.1 + j * 0.1) * 3;\n          // ctx.translate(-size * scale * 0.5, -size * scale * 0.5);\n          ctx.beginPath();\n          ctx.arc(0, 0, Math.abs(size * scale * 0.5), 0, Math.PI * 2);\n          ctx.fill();\n          // ctx.fillRect(0, 0, size * scale, size * scale);\n\n        } else {\n          ctx.fillRect(0, 0, size, size);\n        }\n        ctx.restore();\n      }\n    }\n    ctx.restore();\n  }\n\n  drawProgress(ctx, w, h, p) {\n    ctx.save();\n    ctx.strokeStyle = colors[6];\n    ctx.fillStyle = colors[6];\n\n    ctx.translate(w * p, 0);\n    ctx.beginPath();\n    ctx.arc(0, 0, h * 0.03, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(0, h);\n    ctx.stroke();\n\n    ctx.translate(0, h);\n    ctx.beginPath();\n    ctx.arc(0, 0, h * 0.03, 0, Math.PI * 2);\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n}\n","import StartAudioContext from 'startaudiocontext';\nimport './index.scss';\nimport JazzRNN from './jazz-rnn';\nimport MelodyLine from './melody-line';\nimport { copyRight } from './utils';\nimport fakeData from './fake-data';\n\nconst jr = new JazzRNN();\nconst chordRenderer = new MelodyLine('canvas-1');\nconst melodyRenderer = new MelodyLine('canvas-2');\nconst bassRenderer = new MelodyLine('canvas-3');\nconst tone = jr.tone;\nconst ctx = tone.context;\nlet loading = true;\nlet playing = true;\nlet dataId = 4;\nlet density = 1;\nlet temperature = 1;\nlet numChordProgression = 0;\nlet single = true;\nlet progressionLength = 3;\nlet progressionCount = 0;\n\nconst start = () => {\n  const playBtn = document.getElementById('play');\n  playBtn.firstChild.textContent = 'stop';\n  playing = true;\n  jr.scores.startAll();\n};\n\nconst stop = () => {\n  const playBtn = document.getElementById('play');\n  playBtn.firstChild.textContent = 'play';\n  playing = false;\n  jr.scores.stopAll();\n};\n\nconst resumeTransport = () => {\n  tone.Transport.start();\n};\n\nconst pauseTransport = () => {\n  jr.scores.stopAll();\n  tone.Transport.pause();\n};\n\nconst setBpm = (bpm) => {\n  tone.Transport.bpm.value = bpm;\n};\n\nconst updateMelodies = (data) => {\n  const { Bass, Chord, Drums, Melody } = data.Data;\n  chordRenderer.updateMelody(Chord.Notes);\n  melodyRenderer.updateMelody(Melody.Notes);\n  bassRenderer.updateMelody(Bass.Notes);\n};\n\nconst setup = async () => {\n  // get meta\n  const meta = await jr.server.postVarianceMeta();\n  console.log('MetaData loaded!');\n  // console.log(`amount: ${meta.MetaData.NumChordProgression}`);\n  numChordProgression = meta.MetaData.NumChordProgression;\n\n  // init jr\n  await jr.scores.loadSoundFonts();\n  await jr.scores.initVarianceParts(dataId);\n  // await jr.scores.initVarianceProgression(dataId);\n  jr.scores.startAll();\n  console.log('Soundfonts loaded!');\n\n  // set tempo\n  setBpm(120);\n  tone.Master.volume.value = 20 * Math.log(0.8);\n  tone.Transport.start();\n\n  // states\n  const playBtn = document.getElementById('play');\n  playBtn.firstChild.textContent = 'stop';\n  loading = false;\n  chordRenderer.hoveringNotes = false;\n  melodyRenderer.hoveringNotes = false;\n  bassRenderer.hoveringNotes = false;\n\n  updateMelodies(jr.parts.data);\n};\n\nconst setButtonEvents = () => {\n\n  // play & stop\n  document.getElementById('play').onclick = () => {\n    if (!loading) {\n      if (playing) {\n        stop();\n      } else {\n        start();\n      }\n    }\n  };\n\n  // reload\n  document.getElementById('reload').onclick = async () => {\n    if (!loading) {\n      stop();\n\n      loading = true;\n      single = true;\n      chordRenderer.hoveringNotes = true;\n      melodyRenderer.hoveringNotes = true;\n      bassRenderer.hoveringNotes = true;\n\n      const playBtn = document.getElementById('play');\n      playBtn.firstChild.textContent = 'loading';\n\n      const longBtn = document.getElementById('long');\n      longBtn.firstChild.textContent = 'long';\n\n      // random\n      dataId = Math.floor(Math.random() * numChordProgression);\n      await jr.scores.initVarianceParts(dataId, temperature, density);\n\n      updateMelodies(jr.parts.data);\n\n      loading = false;\n      chordRenderer.hoveringNotes = false;\n      melodyRenderer.hoveringNotes = false;\n      bassRenderer.hoveringNotes = false;\n\n      start();\n    }\n  };\n\n  // long\n  document.getElementById('long').onclick = async () => {\n    if (!loading) {\n      if (single) {\n        if (playing) {\n          jr.scores.stopAll();\n        }\n        single = false;\n\n        loading = true;\n        chordRenderer.hoveringNotes = true;\n        melodyRenderer.hoveringNotes = true;\n        bassRenderer.hoveringNotes = true;\n\n        const playBtn = document.getElementById('play');\n        playBtn.firstChild.textContent = 'loading';\n\n        const longBtn = document.getElementById('long');\n        longBtn.firstChild.textContent = '1/3';\n\n\n        await jr.scores.initVarianceProgression(dataId, temperature, density);\n\n        updateMelodies(jr.parts.data);\n\n        loading = false;\n        chordRenderer.hoveringNotes = false;\n        melodyRenderer.hoveringNotes = false;\n        bassRenderer.hoveringNotes = false;\n\n        start();\n      }\n    }\n  };\n\n  //volume\n  document.getElementById('volume').onchange = (e) => {\n    jr.sounds.changeMasterVolume(e.target.value);\n  };\n\n  // bpm\n  document.getElementById('bpm').onchange = (e) => {\n    setBpm(e.target.value);\n  };\n\n  // sliders\n  document.getElementById('s1').onchange = (e) => {\n    const v = e.target.value * 0.01;\n    jr.sounds.sendReverbGain.gain.value = v;\n  };\n\n  document.getElementById('s2').onchange = (e) => {\n    const v = e.target.value * 0.01;\n    jr.sounds.sendReverb.roomSize.value = v;\n  };\n\n  document.getElementById('s3').onchange = async (e) => {\n    if (!loading) {\n      density = e.target.value * 0.01;\n      stop();\n\n      loading = true;\n      chordRenderer.hoveringNotes = true;\n      melodyRenderer.hoveringNotes = true;\n      bassRenderer.hoveringNotes = true;\n\n      const playBtn = document.getElementById('play');\n      playBtn.firstChild.textContent = 'loading';\n\n      await jr.scores.initVarianceParts(dataId, temperature, density);\n\n      updateMelodies(jr.parts.data);\n\n      loading = false;\n      chordRenderer.hoveringNotes = false;\n      melodyRenderer.hoveringNotes = false;\n      bassRenderer.hoveringNotes = false;\n\n      start();\n    }\n  };\n\n  document.getElementById('s4').onchange = async (e) => {\n    if (!loading) {\n      temperature = e.target.value * 0.01;\n      stop();\n\n      loading = true;\n      chordRenderer.hoveringNotes = true;\n      melodyRenderer.hoveringNotes = true;\n      bassRenderer.hoveringNotes = true;\n\n      const playBtn = document.getElementById('play');\n      playBtn.firstChild.textContent = 'loading';\n\n      await jr.scores.initVarianceParts(dataId, temperature, density);\n\n      updateMelodies(jr.parts.data);\n\n      loading = false;\n      chordRenderer.hoveringNotes = false;\n      melodyRenderer.hoveringNotes = false;\n      bassRenderer.hoveringNotes = false;\n\n      start();\n    }\n  };\n\n  document.getElementById('s5').onchange = async (e) => {\n    // piano gain\n    const v = e.target.value * 0.01;\n    jr.sounds.melodyGain.gain.value = v;\n  };\n\n  document.getElementById('s6').onchange = async (e) => {\n    // chords gain\n    const v = e.target.value * 0.01;\n    jr.sounds.chordsGain.gain.value = v;\n  };\n\n\n};\n\nconst updateProgress = () => {\n  let p = 0;\n\n  if (jr.parts.chordsPart && !loading) {\n    if (single) {\n      p = jr.parts.chordsPart.progress;\n    } else {\n      p = jr.parts.chordsPart.progress * progressionLength;\n      const pFloor = Math.floor(p);\n      if (progressionCount != pFloor) {\n        console.log(`progress: ${pFloor + 1}/${progressionLength}`);\n        progressionCount = pFloor;\n        document.getElementById('long').firstChild.textContent = `${progressionCount + 1}/3`;\n        updateMelodies(jr.parts.datas[progressionCount]);\n      }\n      p = p - pFloor;\n    }\n  }\n  return p;\n};\n\nconst draw = () => {\n  const p = updateProgress();\n  chordRenderer.draw(p);\n  melodyRenderer.draw(p);\n  bassRenderer.draw(p);\n  requestAnimationFrame(() => { draw(); });\n};\n\nStartAudioContext(ctx, '#play', () => {\n\n  const playBtn = document.getElementById('play');\n  console.log('AudioContext started!');\n  console.log('start loading...');\n  playBtn.firstChild.textContent = 'loading';\n\n  copyRight();\n  setup();\n  setButtonEvents();\n  requestAnimationFrame(() => { draw(); });\n});\n","const copyRight = () => {\n  console.log('%c Jazz RNN ', 'background: #222; color: #f70ec4; font-size: 15px;');\n  console.log('%c 2019-05-20 ', 'background: #fff; color: #f70ec4; font-size: 10px;');\n  console.log('%c made by Vibert Thio', 'background: #fff; color: #f70ec4; font-size: 10px;');\n};\n\nexport {\n  copyRight,\n};\n"],"sourceRoot":""}